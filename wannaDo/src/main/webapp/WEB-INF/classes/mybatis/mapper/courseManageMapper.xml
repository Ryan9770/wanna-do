<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="courseManage">
	
	<sql id="where-list">
		<choose>
			<when test="condition=='userId'">
				INSTR(userId, #{keyword}) &gt;= 1
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*) 
		FROM course c
		JOIN member1 m1 ON c.userId = m1.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled, jdbcType=INTEGER}
			</if>
		</where> 
	</select>
	
	<select id="listCourse" parameterType="map" resultType="com.bs.wd.admin.courseManage.Course">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT c.userId, creatorName, c.num, courseName, content,
                price, TO_CHAR(c.reg_date, 'YYYY-MM-DD') reg_date, c.enabled, category
				FROM course c
				JOIN member1 m1 ON c.userId=m1.userId
				JOIN courseCategory cc ON c.categoryNum=cc.categoryNum
				JOIN creatorInfo i ON c.userId=i.userId
				<where>
					<if test="keyword!=null and keyword!='' ">
						<include refid="where-list"/>
					</if>
					<if test="enabled!=''">
						AND enabled = #{enabled, jdbcType=INTEGER}
					</if>
				</where> 
				ORDER BY c.num
			) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="readCourse" parameterType="Integer" resultType="com.bs.wd.admin.courseManage.Course">
		SELECT b.num, b.userId, courseName, content, price, creatorName, imageFilename,
			b.reg_date, tag, recommended, b.imageFile, courseLevel, creator_reg_date,
			b.categoryNum, c.category,
			NVL(courseLikeCount, 0) courseLikeCount
		FROM course b
		JOIN member1 m ON b.userId=m.userId
		JOIN courseCategory c ON b.categoryNum = c.categoryNum
		JOIN creatorInfo i ON b.userId=i.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) courseLikeCount FROM courseLike
			GROUP BY num
		) bc ON b.num = bc.num
		WHERE b.num = #{num}
	</select>
	
	<update id="updateCourseEnabled" parameterType="map">
		UPDATE course SET enabled=#{enabled} WHERE num=#{num}
    </update>
    
	<insert id="insertCourseState" parameterType="com.bs.wd.admin.courseManage.Course">
		INSERT INTO courseState(stateNum  , courseNum, stateCode, memo, registerId, sReg_date)
		VALUES (courseState_seq.NEXTVAL, #{num}, #{stateCode}, #{memo, jdbcType=VARCHAR}, #{registerId}, SYSDATE)
	</insert>
	
	<select id="listCourseState" parameterType="Integer" resultType="com.bs.wd.admin.courseManage.Course">
		SELECT stateNum  , courseNum, stateCode, memo, registerId, sReg_date
		FROM courseState
		WHERE courseNum = #{num}
		ORDER BY stateNum   DESC
	</select>

	<select id="readCourseState" parameterType="Integer" resultType="com.bs.wd.admin.courseManage.Course">
		SELECT * FROM (
			SELECT stateNum  , courseNum, stateCode, memo, registerId, sReg_date
			FROM courseState
			WHERE courseNum = #{num}
			ORDER BY stateNum   DESC
		) WHERE ROWNUM = 1
	</select>
	
	<select id="todayCount" parameterType="String" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM course
		WHERE TO_CHAR(reg_date,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
	</select>
	
	<select id="totalCount" parameterType="String" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM course
	</select>
	
	<select id="listChapter" parameterType="map" resultType="com.bs.wd.admin.courseManage.Course">
				SELECT chapNum, num, subject, orderNo, video, videoLink
				FROM chapter 
				ORDER BY chapNum
	</select>
	
	<select id="listCourseSection" resultType="com.bs.wd.admin.courseManage.Analysis">
		WITH courseSection AS( 
			SELECT c.categoryNum, category
			FROM course c
			JOIN courseCategory cc ON cc.categoryNum=c.categoryNum
			WHERE enabled = 1
		)
	<![CDATA[
	SELECT '토익' section, COUNT(*) count FROM courseSection WHERE category = 'TOEIC'
    UNION ALL
    SELECT '토플' section, COUNT(*) count FROM courseSection WHERE category = 'TOEFL'
    UNION ALL
    SELECT '토스' section, COUNT(*) count FROM courseSection WHERE category = 'TOS'
    UNION ALL
    SELECT '텝스' section, COUNT(*) count FROM courseSection WHERE category = 'TEPS'
    UNION ALL
    SELECT '오픽' section, COUNT(*) count FROM courseSection WHERE category = 'OPIC'
	]]></select>
	
	
	
</mapper>