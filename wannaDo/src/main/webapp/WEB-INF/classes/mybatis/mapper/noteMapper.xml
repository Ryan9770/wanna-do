<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="note">
	<select id="listFriend" parameterType="map" resultType="com.bs.wd.note.Note">
		select userId, userName
		from member1
		<where>
			userId != #{userId}
			and
			<if test="keyword != null and keyword != ''">
				instr(${condition}, #{keyword}) &gt; 0
			</if>
		</where>
	</select>
	<insert id="insertNote" parameterType="com.bs.wd.note.Note">
		insert into note(noteNum, subject, content, sendId, receiveId, sendDay, readDay, sendDelete, receiveDelete)
		values (note_seq.nextval, #{subject}, #{content}, #{sendId}, #{receiveId}, sysdate, #{readDay, jdbcType=VARCHAR}, 'N', 'N')
	</insert>
	<sql id="where-list">
		<if test="condition=='sendName' or condition=='receiveName'">
			instr(userName, #{keyword}) &gt; 0
		</if>
		<if test="condition=='sendId' or condition=='receiveId'">
			${condition}=#{keyword}
		</if>
		<if test="condition=='sendDay'">
			(to_char(sendDay, 'YYYYMMDD')=#{keyword}
				or to_char(sendDay, 'YYYY-MM-DD')=#{keyword})
		</if>
	</sql>
	<select id="dataCountReceive" parameterType="map" resultType="Integer">
		select nvl(count(*), 0)
		from note
		join member1 on sendId=userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			and receiveId=#{userId}
			and receiveDelete='N'
		</where>
	</select>
	<select id="listReceive" parameterType="map" resultType="com.bs.wd.note.Note">
		select * from(
			select rownum rnum, tb.* from(
				select noteNum, subject, content, sendId, userName sendName, to_char(sendDay, 'YYYY-MM-DD HH24:MI:SS') sendDay,
					nvl2(readDay, to_char(readDay, 'YYYY-MM-DD HH24:MI:SS'), null) readDay,
					sendDelete, receiveDelete
				from note
				join member1 on sendId=userId
				<where>
					<if test="keyword!=null and keyword!=''">
						<include refid="where-list"/>
					</if>
					and receiveId=#{userId}
					and receiveDelete='N'
				</where>
				order by noteNum desc
			) tb where rownum &lt;=#{end}
		) where rnum &gt;=#{start}
	</select>
	<select id="dataCountSend" parameterType="map" resultType="Integer">
		select nvl(count(*), 0)
		from note
		join member1 on receiveId=userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			and sendId=#{userId}
			and sendDelete='N'
		</where>
	</select>
	<select id="listSend" parameterType="map" resultType="com.bs.wd.note.Note">
		select * from(
			select rownum rnum, tb.* from(
				select noteNum, subject, content, receiveId, userName receiveName, to_char(sendDay, 'YYYY-MM-DD HH24:MI:SS') sendDay,
					nvl2(readDay, to_char(readDay, 'YYYY-MM-DD HH24:MI:SS'), null) readDay,
					sendDelete, receiveDelete
				from note
				join member1 on receiveId=userId
				<where>
					<if test="keyword!=null and keyword!=''">
						<include refid="where-list"/>
					</if>
					and sendId=#{userId}
					and sendDelete='N'
				</where>
				order by noteNum desc
			) tb where rownum &lt;=#{end}
		) where rnum &gt;=#{start}
	</select>
	<select id="readReceive" parameterType="Integer" resultType="com.bs.wd.note.Note">
		select noteNum, subject, content, sendId, userName sendName, sendDay, readDay, sendDelete, receiveDelete
		from note
		join member1 on sendId=userId
		where noteNum=#{noteNum}
	</select>
	<select id="preReadReceive" parameterType="map" resultType="com.bs.wd.note.Note">
		select * from(
			select noteNum, subject, content, sendId, userName sendName, sendDay, readDay, sendDelete, receiveDelete
			from note
			join member1 on sendId=userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				and receiveId=#{userId}
				and receiveDelete='N'
				and (noteNum &lt;#{noteNum})
			</where>
			order by noteNum desc
		) where rownum = 1
	</select>
	<select id="nextReadReceive" parameterType="map" resultType="com.bs.wd.note.Note">
		select * from(
			select noteNum, subject, content, sendId, userName sendName, sendDay, readDay, sendDelete, receiveDelete
			from note
			join member1 on sendId=userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				and receiveId=#{userId}
				and receiveDelete='N'
				and (noteNum &gt;#{noteNum})
			</where>
			order by noteNum asc
		) where rownum = 1
	</select>
	<select id="readSend" parameterType="Integer" resultType="com.bs.wd.note.Note">
		select noteNum, subject, content, receiveId, userName receiveName, sendDay, readDay, sendDelete, receiveDelete
		from note
		join member1 on receiveId=userId
		where noteNum=#{noteNum}
	</select>
	<select id="preReadSend" parameterType="map" resultType="com.bs.wd.note.Note">
		select * from(
			select noteNum, subject, content, receivedId, userName receiveName, sendDay, readDay, sendDelete, receiveDelete
			from note
			join member1 on receiveId=userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				and sendId=#{userId}
				and sendDelete='N'
				and (noteNum &lt;#{noteNum})
			</where>
			order by noteNum desc
		) where rownum = 1
	</select>
	<select id="nextReadSend" parameterType="map" resultType="com.bs.wd.note.Note">
		select * from(
			select noteNum, subject, content, receiveId, userName receiveName, sendDay, readDay, sendDelete, receiveDelete
			from note
			join member1 on receiveId=userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				and sendId=#{userId}
				and sendDelete='N'
				and (noteNum &gt;#{noteNum})
			</where>
			order by noteNum asc
		) where rownum = 1
	</select>
	<select id="readReplyReceive" parameterType="Integer" resultType="com.bs.wd.note.Note">
		SELECT noteNum, subject, content, sendId, userName sendName, sendDay, readDay, sendDelete, receiveDelete
		FROM note
		JOIN member1 ON sendId=userId
		WHERE parent=#{noteNum} AND receiveDelete='N'
	</select>
	<update id="updateReadDay" parameterType="Integer">
		UPDATE note SET readDay = SYSDATE
		WHERE noteNum=#{noteNum} AND readDay IS NULL
	</update>
	<update id="updateDeleteState" parameterType="map">
		UPDATE note SET ${field1} = 'Y'
		WHERE noteNum IN
			<foreach item="noteNum" index="index" collection="noteNumList" open="(" separator="," close=")">
				#{noteNum}
			</foreach>
	</update>
	<delete id="deleteNote" parameterType="map">
		DELETE FROM note
		WHERE ${field2} = 'Y' AND
		noteNum IN
			<foreach item="noteNum" index="index" collection="noteNumList" open="(" separator="," close=")">
				#{noteNum}
			</foreach>
	</delete>
	<select id="newNoteCount" parameterType="String" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM note
		WHERE readDay IS NULL AND receiveId=#{userId}
	</select>
</mapper>